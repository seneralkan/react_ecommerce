{"ast":null,"code":"var _jsxFileName = \"/Users/seneralkan/Desktop/dev/react_ecommerce/my-app/src/pages/Products/index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Card from '../../components/Card';\nimport { Grid } from \"@chakra-ui/react\";\nimport { useQuery } from 'react-query';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Products() {\n  _s();\n\n  const {\n    isLoading,\n    error,\n    data\n  } = useQuery('repoData', () => fetch('https://localhost:4000/product').then(res => res.json()));\n  if (isLoading) return 'Loading...';\n  if (error) return 'An error has occurred: ' + error.message;\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      templateColumns: \"repeat(3, 1fr)\",\n      gap: 4,\n      children: data.map((item, key) => /*#__PURE__*/_jsxDEV(Card, {\n        item: item\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Products, \"P7jBIA24rc00P7RvfXjpVl6dqRI=\", false, function () {\n  return [useQuery];\n});\n\n_c = Products;\nexport default Products;\n\nvar _c;\n\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"sources":["/Users/seneralkan/Desktop/dev/react_ecommerce/my-app/src/pages/Products/index.js"],"names":["React","Card","Grid","useQuery","Products","isLoading","error","data","fetch","then","res","json","message","console","log","map","item","key"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,QAAT,QAAyB,aAAzB;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAChB,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA;AAApB,MAA6BJ,QAAQ,CAAC,UAAD,EAAa,MACvDK,KAAK,CAAC,gCAAD,CAAL,CAAwCC,IAAxC,CAA6CC,GAAG,IAC9CA,GAAG,CAACC,IAAJ,EADF,CAD0C,CAA3C;AAMD,MAAIN,SAAJ,EAAe,OAAO,YAAP;AAEf,MAAIC,KAAJ,EAAW,OAAO,4BAA4BA,KAAK,CAACM,OAAzC;AAEXC,EAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACC,sBACI;AAAA,2BAEI,QAAC,IAAD;AAAM,MAAA,eAAe,EAAC,gBAAtB;AAAuC,MAAA,GAAG,EAAE,CAA5C;AAAA,gBAEQA,IAAI,CAACQ,GAAL,CAAS,CAACC,IAAD,EAAOC,GAAP,kBACL,QAAC,IAAD;AAAgB,QAAA,IAAI,EAAED;AAAtB,SAAWC,GAAX;AAAA;AAAA;AAAA;AAAA,cADJ;AAFR;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH;;GAzBQb,Q;UAC8BD,Q;;;KAD9BC,Q;AA2BT,eAAeA,QAAf","sourcesContent":["import React from 'react'\nimport Card from '../../components/Card'\nimport { Grid } from \"@chakra-ui/react\"\nimport { useQuery } from 'react-query';\n\nfunction Products() {\n    const { isLoading, error, data } = useQuery('repoData', () =>\n     fetch('https://localhost:4000/product').then(res =>\n       res.json()\n     )\n   )\n \n   if (isLoading) return 'Loading...'\n \n   if (error) return 'An error has occurred: ' + error.message\n\n   console.log(data)\n    return (\n        <div>\n            \n            <Grid templateColumns=\"repeat(3, 1fr)\" gap={4}>\n                {\n                    data.map((item, key) => (\n                        <Card key={key} item={item} />\n                    ))\n                }\n            </Grid>            \n\n        </div>\n    )\n}\n\nexport default Products\n"]},"metadata":{},"sourceType":"module"}